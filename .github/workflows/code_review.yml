name: AI Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
      - name: ðŸ“¥ Checkout cÃ³digo
        uses: actions/checkout@v4

      - name: ðŸ”§ Instalar dependÃªncias
        run: pip install openai requests gh

      - name: ðŸ“œ Extrair mudanÃ§as do PR
        id: extract_diff
          run: |
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3.diff" \
          "${{ github.event.pull_request.url }}" > pr_diff.txt

      - name: ðŸ¤– Executar revisÃ£o com ChatGPT
        id: ai_review
        run: |
          python3 - <<EOF
          import openai
          import os

          api_key = os.getenv("OPENAI_API_KEY")
          with open("pr_diff.txt", "r") as file:
              pr_diff = file.read()

          if not pr_diff.strip():
              review = "Nenhuma alteraÃ§Ã£o detectada no PR."
          else:
              prompt = f"Revise o seguinte cÃ³digo e sugira melhorias:\n\n{pr_diff}"
              response = openai.ChatCompletion.create(
                  model="gpt-4",
                  messages=[{"role": "system", "content": "VocÃª Ã© um revisor de cÃ³digo experiente."},
                            {"role": "user", "content": prompt}]
              )
              review = response["choices"][0]["message"]["content"]

          print("### AI Code Review ###\n", review)
          with open("ai_review.txt", "w") as file:
              file.write(review)
          EOF
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: ðŸ’¬ Comentar no PR
        run: |
          gh pr comment ${{ github.event.pull_request.number }} --body "$(cat ai_review.txt)"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
