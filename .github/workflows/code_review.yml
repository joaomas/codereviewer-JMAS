name: AI Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v4

      - name: 🔧 Instalar dependências
        run: pip install openai requests gh

      - name: 📜 Extrair mudanças do PR
        id: extract_diff
        run: |
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3.diff" \
          "${{ github.event.pull_request.url }}" > pr_diff.txt

      - name: 🤖 Executar revisão com ChatGPT
        id: ai_review
        run: |
            python3 - <<EOF
            import openai
            import os
      
            api_key = os.getenv("OPENAI_API_KEY")
            if not api_key:
                print("❌ ERRO: A chave OPENAI_API_KEY não foi encontrada!")
                exit(1)
      
            print("✅ Chave OpenAI encontrada. Testando conexão...")
      
            try:
                client = openai.OpenAI(api_key=api_key)
                response = client.models.list()
                print("✅ Conexão com OpenAI bem-sucedida!")
            except Exception as e:
                print(f"❌ ERRO ao conectar na OpenAI: {e}")
                exit(1)
      
            with open("pr_diff.txt", "r") as file:
                pr_diff = file.read()
      
            if not pr_diff.strip():
                review = "Nenhuma alteração detectada no PR."
            else:
                prompt = f"Revise o seguinte código e sugira melhorias:\n\n{pr_diff}"
                response = client.chat.completions.create(
                    model="gpt-4",
                    messages=[{"role": "system", "content": "Você é um revisor de código experiente."},
                              {"role": "user", "content": prompt}]
                )
                review = response.choices[0].message.content
      
            print("### AI Code Review ###\n", review)
            with open("ai_review.txt", "w") as file:
                file.write(review)
            EOF
        env:
            OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: 💬 Comentar no PR
        run: |
          gh pr comment ${{ github.event.pull_request.number }} --body "$(cat ai_review.txt)"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
